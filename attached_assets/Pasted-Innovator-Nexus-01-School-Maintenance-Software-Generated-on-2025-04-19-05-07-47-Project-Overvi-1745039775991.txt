Innovator Nexus #01 - School Maintenance Software
Generated on: 2025-04-19 05:07:47
Project Overview
This document outlines the requirements and database schema for the School Maintenance Software project under Innovator Nexus #01. It includes modules for Admin, School Admin, Teachers, and Students/Parents, with details of tables and example user entries for PostgreSQL implementation.
Dashboard Features
Admin Dashboard
‚Ä¢	- Manage School Admins
‚Ä¢	- Manage School Details
‚Ä¢	- View System Analytics
‚Ä¢	- Configure System Settings
School Admin Dashboard
‚Ä¢	- Financial Management (Bills, Fees)
‚Ä¢	- Staff Management (Profiles, Lists)
‚Ä¢	- Student Management (Profiles, Classes)
‚Ä¢	- Academic Management (Attendance, Exams, Timetables)
‚Ä¢	- Communication System (Messages, Notices)
Teachers Dashboard
‚Ä¢	- Lesson Plan Submission
‚Ä¢	- Student Attendance
‚Ä¢	- Assignments (Create, Grade)
‚Ä¢	- Communication with Admin & Students
Students/Parents Dashboard
‚Ä¢	- Profile Management
‚Ä¢	- Fees & Receipts
‚Ä¢	- Academic Records (Marks, Attendance, Exams)
‚Ä¢	- Communication (Receive Messages)

üîê 1. Super Admin
üéØ Goal: Manage the entire system and all schools.
‚Ä¢	User Story 1:
As a Super Admin, I want to create and manage school admin accounts so that new schools can use the system.
‚Ä¢	User Story 2:
As a Super Admin, I want to view analytics (e.g., number of students, fee payments, active schools) across all schools.
‚Ä¢	User Story 3:
As a Super Admin, I want to configure global settings such as grading systems or SMS/email templates.
________________________________________
üè´ 2. School Admin
üéØ Goal: Operate a single school, manage data, staff, and academic structure.
‚Ä¢	User Story 1:
As a School Admin, I want to add teachers, staff, and students with their details.
‚Ä¢	User Story 2:
As a School Admin, I want to set up class structures, timetables, and subject mappings so teachers can follow a schedule.
‚Ä¢	User Story 3:
As a School Admin, I want to manage fees and bills, including uploading fee structures, recording payments, and organizing monthly bills.
‚Ä¢	User Story 4:
As a School Admin, I want to broadcast announcements to students and teachers to keep them updated.
________________________________________
üë©‚Äçüè´ 3. Teacher
üéØ Goal: Manage academic responsibilities for assigned classes/subjects.
‚Ä¢	User Story 1:
As a Teacher, I want to mark student attendance daily, by class and date.
‚Ä¢	User Story 2:
As a Teacher, I want to submit weekly lesson plans to show what I will teach.
‚Ä¢	User Story 3:
As a Teacher, I want to create and assign homework, receive submissions, and grade them.
‚Ä¢	User Story 4:
As a Teacher, I want to view my timetable and class list to know my schedule and students.
‚Ä¢	User Story 5:
As a Teacher, I want to send messages to students or admins for academic communication.
________________________________________
üéì 4. Student
üéØ Goal: Participate in academic activities and stay informed.
‚Ä¢	User Story 1:
As a Student, I want to view my attendance records and exam scores to track my performance.
‚Ä¢	User Story 2:
As a Student, I want to submit homework and download assignments from teachers.
‚Ä¢	User Story 3:
As a Student, I want to receive messages and announcements related to school events, holidays, or exams.
‚Ä¢	User Story 4:
As a Student, I want to download my payment receipt and check pending fees.
________________________________________
üë®‚Äçüë©‚Äçüëß 5. Parent
üéØ Goal: Monitor their child‚Äôs academic and financial records.
‚Ä¢	User Story 1:
As a Parent, I want to view my child's attendance and marks to monitor progress.
‚Ä¢	User Story 2:
As a Parent, I want to check paid and pending fees, and download receipts.
‚Ä¢	User Story 3:
As a Parent, I want to receive updates or announcements from the school.
‚Ä¢	User Story 4:
As a Parent, I want to manage profile details like contact info for communication.

Database Schema Overview
Below are the PostgreSQL tables with core fields and a sample record for each.
users
Columns:
‚Ä¢	- id
‚Ä¢	- email
‚Ä¢	- password
‚Ä¢	- role
‚Ä¢	- created_at
Example Entry:
{'id': 'Sample_1', 'email': 'Sample_2', 'password': 'Sample_3', 'role': 'Sample_4', 'created_at': 'Sample_5'}
schools
Columns:
‚Ä¢	- id
‚Ä¢	- name
‚Ä¢	- address
‚Ä¢	- contact_email
‚Ä¢	- contact_phone
‚Ä¢	- created_at
Example Entry:
{'id': 'Sample_1', 'name': 'Sample_2', 'address': 'Sample_3', 'contact_email': 'Sample_4', 'contact_phone': 'Sample_5', 'created_at': 'Sample_6'}
school_admins
Columns:
‚Ä¢	- id
‚Ä¢	- user_id
‚Ä¢	- school_id
‚Ä¢	- full_name
‚Ä¢	- phone_number
Example Entry:
{'id': 'Sample_1', 'user_id': 'Sample_2', 'school_id': 'Sample_3', 'full_name': 'Sample_4', 'phone_number': 'Sample_5'}
teachers
Columns:
‚Ä¢	- id
‚Ä¢	- user_id
‚Ä¢	- school_id
‚Ä¢	- full_name
‚Ä¢	- subject_specialization
‚Ä¢	- phone_number
‚Ä¢	- joining_date
Example Entry:
{'id': 'Sample_1', 'user_id': 'Sample_2', 'school_id': 'Sample_3', 'full_name': 'Sample_4', 'subject_specialization': 'Sample_5', 'phone_number': 'Sample_6', 'joining_date': 'Sample_7'}
students
Columns:
‚Ä¢	- id
‚Ä¢	- user_id
‚Ä¢	- school_id
‚Ä¢	- class_id
‚Ä¢	- full_name
‚Ä¢	- dob
‚Ä¢	- gender
‚Ä¢	- admission_date
‚Ä¢	- parent_id
Example Entry:
{'id': 'Sample_1', 'user_id': 'Sample_2', 'school_id': 'Sample_3', 'class_id': 'Sample_4', 'full_name': 'Sample_5', 'dob': 'Sample_6', 'gender': 'Sample_7', 'admission_date': 'Sample_8', 'parent_id': 'Sample_9'}
parents
Columns:
‚Ä¢	- id
‚Ä¢	- user_id
‚Ä¢	- full_name
‚Ä¢	- phone_number
‚Ä¢	- address
Example Entry:
{'id': 'Sample_1', 'user_id': 'Sample_2', 'full_name': 'Sample_3', 'phone_number': 'Sample_4', 'address': 'Sample_5'}
classes
Columns:
‚Ä¢	- id
‚Ä¢	- school_id
‚Ä¢	- name
‚Ä¢	- section
‚Ä¢	- class_teacher_id
Example Entry:
{'id': 'Sample_1', 'school_id': 'Sample_2', 'name': 'Sample_3', 'section': 'Sample_4', 'class_teacher_id': 'Sample_5'}
subjects
Columns:
‚Ä¢	- id
‚Ä¢	- school_id
‚Ä¢	- name
Example Entry:
{'id': 'Sample_1', 'school_id': 'Sample_2', 'name': 'Sample_3'}
class_subjects
Columns:
‚Ä¢	- id
‚Ä¢	- class_id
‚Ä¢	- subject_id
‚Ä¢	- teacher_id
Example Entry:
{'id': 'Sample_1', 'class_id': 'Sample_2', 'subject_id': 'Sample_3', 'teacher_id': 'Sample_4'}
student_attendance
Columns:
‚Ä¢	- id
‚Ä¢	- student_id
‚Ä¢	- class_id
‚Ä¢	- date
‚Ä¢	- status
‚Ä¢	- marked_by
Example Entry:
{'id': 'Sample_1', 'student_id': 'Sample_2', 'class_id': 'Sample_3', 'date': 'Sample_4', 'status': 'Sample_5', 'marked_by': 'Sample_6'}
teacher_attendance
Columns:
‚Ä¢	- id
‚Ä¢	- teacher_id
‚Ä¢	- school_id
‚Ä¢	- date
‚Ä¢	- status
Example Entry:
{'id': 'Sample_1', 'teacher_id': 'Sample_2', 'school_id': 'Sample_3', 'date': 'Sample_4', 'status': 'Sample_5'}
lesson_plans
Columns:
‚Ä¢	- id
‚Ä¢	- teacher_id
‚Ä¢	- class_id
‚Ä¢	- subject_id
‚Ä¢	- week_start_date
‚Ä¢	- plan_content
‚Ä¢	- status
Example Entry:
{'id': 'Sample_1', 'teacher_id': 'Sample_2', 'class_id': 'Sample_3', 'subject_id': 'Sample_4', 'week_start_date': 'Sample_5', 'plan_content': 'Sample_6', 'status': 'Sample_7'}
assignments
Columns:
‚Ä¢	- id
‚Ä¢	- teacher_id
‚Ä¢	- class_id
‚Ä¢	- subject_id
‚Ä¢	- title
‚Ä¢	- description
‚Ä¢	- due_date
‚Ä¢	- attachment_url
Example Entry:
{'id': 'Sample_1', 'teacher_id': 'Sample_2', 'class_id': 'Sample_3', 'subject_id': 'Sample_4', 'title': 'Sample_5', 'description': 'Sample_6', 'due_date': 'Sample_7', 'attachment_url': 'Sample_8'}
assignment_submissions
Columns:
‚Ä¢	- id
‚Ä¢	- assignment_id
‚Ä¢	- student_id
‚Ä¢	- submission_date
‚Ä¢	- content
‚Ä¢	- grade
‚Ä¢	- feedback
Example Entry:
{'id': 'Sample_1', 'assignment_id': 'Sample_2', 'student_id': 'Sample_3', 'submission_date': 'Sample_4', 'content': 'Sample_5', 'grade': 'Sample_6', 'feedback': 'Sample_7'}
exams
Columns:
‚Ä¢	- id
‚Ä¢	- school_id
‚Ä¢	- title
‚Ä¢	- start_date
‚Ä¢	- end_date
‚Ä¢	- term
‚Ä¢	- class_id
Example Entry:
{'id': 'Sample_1', 'school_id': 'Sample_2', 'title': 'Sample_3', 'start_date': 'Sample_4', 'end_date': 'Sample_5', 'term': 'Sample_6', 'class_id': 'Sample_7'}
exam_subjects
Columns:
‚Ä¢	- id
‚Ä¢	- exam_id
‚Ä¢	- subject_id
‚Ä¢	- exam_date
‚Ä¢	- max_marks
Example Entry:
{'id': 'Sample_1', 'exam_id': 'Sample_2', 'subject_id': 'Sample_3', 'exam_date': 'Sample_4', 'max_marks': 'Sample_5'}
marks
Columns:
‚Ä¢	- id
‚Ä¢	- student_id
‚Ä¢	- exam_subject_id
‚Ä¢	- marks_obtained
Example Entry:
{'id': 'Sample_1', 'student_id': 'Sample_2', 'exam_subject_id': 'Sample_3', 'marks_obtained': 'Sample_4'}
fee_structures
Columns:
‚Ä¢	- id
‚Ä¢	- school_id
‚Ä¢	- class_id
‚Ä¢	- term
‚Ä¢	- amount
Example Entry:
{'id': 'Sample_1', 'school_id': 'Sample_2', 'class_id': 'Sample_3', 'term': 'Sample_4', 'amount': 'Sample_5'}
fee_payments
Columns:
‚Ä¢	- id
‚Ä¢	- student_id
‚Ä¢	- amount_paid
‚Ä¢	- payment_date
‚Ä¢	- receipt_url
‚Ä¢	- term
‚Ä¢	- status
Example Entry:
{'id': 'Sample_1', 'student_id': 'Sample_2', 'amount_paid': 'Sample_3', 'payment_date': 'Sample_4', 'receipt_url': 'Sample_5', 'term': 'Sample_6', 'status': 'Sample_7'}
bills
Columns:
‚Ä¢	- id
‚Ä¢	- school_id
‚Ä¢	- title
‚Ä¢	- amount
‚Ä¢	- bill_month
‚Ä¢	- category
‚Ä¢	- upload_url
‚Ä¢	- status
Example Entry:
{'id': 'Sample_1', 'school_id': 'Sample_2', 'title': 'Sample_3', 'amount': 'Sample_4', 'bill_month': 'Sample_5', 'category': 'Sample_6', 'upload_url': 'Sample_7', 'status': 'Sample_8'}
messages
Columns:
‚Ä¢	- id
‚Ä¢	- sender_id
‚Ä¢	- receiver_role
‚Ä¢	- receiver_id
‚Ä¢	- school_id
‚Ä¢	- message_type
‚Ä¢	- content
‚Ä¢	- created_at
Example Entry:
{'id': 'Sample_1', 'sender_id': 'Sample_2', 'receiver_role': 'Sample_3', 'receiver_id': 'Sample_4', 'school_id': 'Sample_5', 'message_type': 'Sample_6', 'content': 'Sample_7', 'created_at': 'Sample_8'}
class_messages
Columns:
‚Ä¢	- id
‚Ä¢	- class_id
‚Ä¢	- sender_id
‚Ä¢	- content
‚Ä¢	- created_at
Example Entry:
{'id': 'Sample_1', 'class_id': 'Sample_2', 'sender_id': 'Sample_3', 'content': 'Sample_4', 'created_at': 'Sample_5'}
